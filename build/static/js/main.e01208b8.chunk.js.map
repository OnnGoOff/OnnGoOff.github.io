{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","window","innerWidth","setWidth","innerHeight","height","setHeight","updateDimensions","useEffect","addEventListener","removeEventListener","padding","bg","h","theme","sizes","full","centerContent","maxW","as","fontSize","fontSizes","color","textTransform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","extendTheme","colors","brand","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAiCeA,MA9Bf,WAAgB,IAAD,EACaC,mBAASC,OAAOC,YAD7B,mBACCC,GADD,aAEeH,mBAASC,OAAOG,aAF/B,mBAENC,EAFM,KAEEC,EAFF,KAGPC,EAAmB,WACvBJ,EAASF,OAAOC,YAChBI,EAAUL,OAAOG,cAOnB,OALAI,qBAAU,WAER,OADAP,OAAOQ,iBAAiB,SAAUF,GAC3B,kBAAMN,OAAOS,oBAAoB,SAAUH,MACjD,IAGD,mCACE,cAAC,IAAD,CAAKI,QAAQ,IAAIN,OAAQA,EAAQO,GAAG,sBAApC,SACE,cAAC,IAAD,CAAQC,EAAGC,IAAMC,MAAMC,KAAvB,SACE,eAAC,IAAD,CAAWC,eAAa,EAACC,KAAMJ,IAAMC,MAAMC,KAA3C,UACE,cAAC,IAAD,CAASG,GAAG,KAAKC,SAAUN,IAAMO,UAAU,OAAQC,MAAM,QAAzD,wBAGA,cAAC,IAAD,CAAMF,SAAS,MAAME,MAAM,uBAAuBC,cAAc,aAAhE,2CCTGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCQRX,EAAQmB,YAAY,CAAEC,OAVb,CACbC,MAAO,CACL,iBAAkB,UAClB,gBAAiB,UACjB,iBAAkB,UAClB,cAAe,UACf,eAAgB,cAMpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAgBxB,MAAOA,EAAvB,SACE,cAAC,EAAD,QAGJyB,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.e01208b8.chunk.js","sourcesContent":["import { Box, Center, Container, Heading, Text, theme } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n  const updateDimensions = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n  useEffect(() => {\n    window.addEventListener('resize', updateDimensions);\n    return () => window.removeEventListener('resize', updateDimensions);\n  }, []);\n\n  return (\n    <>\n      <Box padding=\"4\" height={height} bg=\"brand.persian-green\">\n        <Center h={theme.sizes.full}>\n          <Container centerContent maxW={theme.sizes.full}>\n            <Heading as=\"h1\" fontSize={theme.fontSizes['9xl']} color=\"white\">\n              Onn Go Off\n            </Heading>\n            <Text fontSize=\"6xl\" color=\"brand.charcoal-black\" textTransform=\"capitalize\">\n              ya yeet skrrt skrrt\n            </Text>\n          </Container>\n        </Center>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\n\nconst colors = {\n  brand: {\n    'charcoal-black': '#264653',\n    'persian-green': '#2a9d8f',\n    'yellow-crayola': '#e9c46a',\n    'sandy-brown': '#f4a261',\n    'burnt-sienna': '#e76f51',\n  },\n};\n\nconst theme = extendTheme({ colors });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}